<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json,application/xml,text/xml</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>POST</http_method>
        <name>runFileLevelVmRestore</name>
        <operation_script><![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {
	var headers = request.headers;
	var token = headers['cvtoken'];
	var endpoint = headers['cvendpoint'];

	//gs.info('Getting schedules using token ' + token);
	
	var requestBody = request.body;
	var requestData = requestBody.data;
	
	gs.info('requestData ' + JSON.stringify(requestData));
	
	var subclientId = requestData.subclientId;
	var destPath = requestData.destPath;
	var destClientId = requestData.destClientId;
	var destClientName = requestData.destClientName;
	var serverName = requestData.serverName;
	var vmGuid = requestData.vmGuid;
	var vmUsername = requestData.vmUsername;
	var vmPassword = requestData.vmPassword;
	var sourcePath = requestData.sourcePath;
	var overwriteFiles = requestData.overwriteFiles;


	var body = '<TMMsg_CreateTaskReq><taskInfo><task policyType="0" taskType="1" /><associations subclientId="' + subclientId + '" applicationId="106" _type_="3"/><subTasks><subTask subTaskType="3" operationType="1001"/><options><restoreOptions restoreACLsType="3"><browseOption noImage="1" useExactIndex="0" listMedia="0" toTime="0" fromTime="0"><timeRange _type_="54" fromTime="0" toTime="0"/><mediaOption><copyPrecedence copyPrecedence="0"/></mediaOption></browseOption><destination inPlace="0" isLegalHold="0"><destPath val="' + destPath + '"/><destClient clientId="' + destClientId + '" clientName="' + destClientName + '"/></destination><volumeRstOption volumeLeveRestore="0"/><virtualServerRstOption isFileBrowse="1" viewType="0"><diskLevelVMRestoreOption useVcloudCredentials="1"/><fileLevelVMRestoreOption serverName="' + serverName + '" vmGuid="' + vmGuid + '"><guestUserPassword userName="' + vmUsername + '" password="' + vmPassword + '"/></fileLevelVMRestoreOption></virtualServerRstOption><fileOption><sourceItem val="' + sourcePath + '"/></fileOption><impersonation useImpersonation="1"><user userName="' + vmUsername + '" password="' + vmPassword + '"/></impersonation><commonOptions overwriteFiles="' + overwriteFiles + '" detectRegularExpression="1" unconditionalOverwrite="' + overwriteFiles + '" stripLevelType="0" preserveLevel="1" stripLevel="0" restoreACLs="1" isFromBrowseBackup="1" clusterDBBackedup="0"/></restoreOptions></options></subTasks></taskInfo></TMMsg_CreateTaskReq>';

	gs.info('Sending file level vm restore request: ' + body);

	var sm = new sn_ws.RESTMessageV2();
	sm.setEndpoint(endpoint + "/webconsole/RestServlet/CreateTask");
	sm.setHttpMethod("post");
	sm.setHttpTimeout(80000);
	sm.setRequestHeader("Accept","application/json");
	sm.setRequestHeader("Content-Type","application/xml");
	sm.setRequestHeader("Authtoken", token);
	sm.setLogLevel("all");

	sm.setRequestBody(body);

	var cvresponse = sm.execute();
	var cvresponseBody = cvresponse.getBody();
	var statusCode = cvresponse.getStatusCode();

	gs.info("statusCode " + statusCode);
	gs.info("responseBody " + cvresponseBody); 

	if(statusCode != 200) {
		cvresponseBody = "{}";
	}

	var responseJson = JSON.parse(cvresponseBody);
	responseJson.cvStatusCode = statusCode;

	gs.info('Response json: ' + JSON.stringify(responseJson));

	return responseJson;

})(request, response);]]></operation_script>
        <operation_uri>/api/x_183199_testcommv/cvapi/vmfilerestore</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/vmfilerestore</relative_path>
        <request_example/>
        <requires_acl_authorization>false</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-04-03 07:06:00</sys_created_on>
        <sys_id>dcdb17e8dbd913004eb15ec0cf961917</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>runFileLevelVmRestore</sys_name>
        <sys_package display_value="TestCommvault" source="x_183199_testcommv">3aafe741db130300180ad170cf961919</sys_package>
        <sys_policy/>
        <sys_scope display_value="TestCommvault">3aafe741db130300180ad170cf961919</sys_scope>
        <sys_update_name>sys_ws_operation_dcdb17e8dbd913004eb15ec0cf961917</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-04-03 07:06:00</sys_updated_on>
        <web_service_definition display_value="cvapi">d1004b1fdbc513004eb15ec0cf96190b</web_service_definition>
        <web_service_version/>
    </sys_ws_operation>
</record_update>
