<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json,application/xml,text/xml</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>POST</http_method>
        <name>executePoputInputForWorkflow</name>
        <operation_script><![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {
	var headers = request.headers;
	var token = headers['cvtoken'];
	var endpoint = headers['cvendpoint'];

	//gs.info('Getting schedules using token ' + token);
	
	var requestBody = request.body;
	var requestData = requestBody.data;
	
	var popupInputMetadata = requestData.popupMetadata;
	var inputs = requestData.popupInputs;
	
	gs.info('popup input requestData: ' + JSON.stringify(requestData));
	
	var sessionId = popupInputMetadata.sessionId;
	var jobId = popupInputMetadata.jobId;
	var processStepId = popupInputMetadata.processStepId;
	var okClicked = popupInputMetadata.okClicked;
	var action = popupInputMetadata.action;
	var clientId = popupInputMetadata.client.clientId;
	var clientName = popupInputMetadata.client.clientName;
	var hostName = popupInputMetadata.client.hostName;
	var commCellId = popupInputMetadata.commCell.commCellId;

	var inputOptions = '';
	for(var anInput in inputs){
		if(Array.isArray(inputs[anInput])) {
			gs.info("json " + JSON.stringify(inputs[anInput]));
			for(var i=0; i<inputs[anInput].length; i++) {
				gs.info("json item" + JSON.stringify(inputs[anInput][i]));
				if(inputs[anInput][i].textinput && inputs[anInput][i].textinput.length>0) {
					inputOptions += "<"+anInput+">"+inputs[anInput][i].textinput+"</"+anInput+">";	
				}
			}
		} else {
			inputOptions += "<"+anInput+">"+inputs[anInput]+"</"+anInput+">";
		}
	}
	inputOptions = "<inputs>"+inputOptions+"</inputs>";
	
	inputOptions = inputOptions.replace(/[<>&'"]/g, function (c) {
		switch (c) {
			case '<': return '&lt;';
			case '>': return '&gt;';
			case '&': return '&amp;';
			case '\'': return '&apos;';
			case '"': return '&quot;';
		}
	});
	
	var body  = '<Workflow_PopupInputRequest sessionId="' + sessionId + '" jobId="' + jobId + '" processStepId="' + processStepId + '" okClicked="' + okClicked;
	
	if(okClicked == 1) {
		body += '" action="' + action;
	}
	
	body += '" inputXml="' + inputOptions + '"><client clientId="' + clientId + '" clientName="' + clientName + '" hostName="' + hostName + '"/><commCell commCellId="' + commCellId + '"/></Workflow_PopupInputRequest>';

	gs.info('Input options for workflow exec:' + inputOptions);
	gs.info('Sending popup input execute as api request, body:' + body);

	var sm = new sn_ws.RESTMessageV2();
	sm.setEndpoint(endpoint + "/webconsole/RestServlet/WorkflowRequest");
	sm.setHttpMethod("post");
	sm.setHttpTimeout(80000);
	sm.setRequestHeader("Accept","application/json");
	sm.setRequestHeader("Content-Type","application/xml");
	sm.setRequestHeader("Authtoken", token);
	sm.setLogLevel("all");

	sm.setRequestBody(body);

	var cvresponse = sm.execute();
	var cvresponseBody = cvresponse.getBody();
	var statusCode = cvresponse.getStatusCode();

	gs.info("statusCode " + statusCode);
	gs.info("responseBody " + cvresponseBody); 

	if(statusCode != 200) {
		cvresponseBody = "{}";
	}

	var responseJson = JSON.parse(cvresponseBody);
	responseJson.cvStatusCode = statusCode;

	gs.info('Workflow Response json: ' + JSON.stringify(responseJson));

	return responseJson;

})(request, response);]]></operation_script>
        <operation_uri>/api/x_183199_testcommv/cvapi/executepoputinputforworkflow</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/executepoputinputforworkflow</relative_path>
        <request_example/>
        <requires_acl_authorization>false</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-10-07 09:22:12</sys_created_on>
        <sys_id>724d3a7cdbc9a3004eb15ec0cf961998</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>executePoputInputForWorkflow</sys_name>
        <sys_package display_value="CommvaultServiceNowApplication" source="x_183199_testcommv">3aafe741db130300180ad170cf961919</sys_package>
        <sys_policy/>
        <sys_scope display_value="CommvaultServiceNowApplication">3aafe741db130300180ad170cf961919</sys_scope>
        <sys_update_name>sys_ws_operation_724d3a7cdbc9a3004eb15ec0cf961998</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-10-07 13:44:45</sys_updated_on>
        <web_service_definition display_value="cvapi">d1004b1fdbc513004eb15ec0cf96190b</web_service_definition>
        <web_service_version/>
    </sys_ws_operation>
</record_update>
